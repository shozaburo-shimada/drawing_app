{"ast":null,"code":"var _jsxFileName = \"/Users/shozaburo/Documents/git/drawing_app/src/PaperCanvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport paper from 'paper';\n\n// マウスポインターの座標\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isErasing, setIsErasing] = useState(false);\n  useEffect(() => {\n    // canvasが準備できたらpaper.jsを初期化\n    if (canvasRef.current) {\n      paper.setup(canvasRef.current);\n\n      // ここに描画処理を書く\n\n      // 例: 円を描画\n      const circle = new paper.Path.Circle({\n        center: [50, 50],\n        radius: 30,\n        strokeColor: 'black'\n      });\n\n      // 例: 直線を描画\n      var myPath = new paper.Path();\n      myPath.strokeColor = new paper.Color('black');\n      myPath.add(new paper.Point(0, 0));\n      myPath.add(new paper.Point(100, 50));\n      //setPath(newPath);\n\n      // 任意で、交差判定などの処理もここで行えます。\n\n      // マウスムーブ時の処理\n      paper.view.onMouseMove = event => {\n        const nearestPoint = myPath.getNearestPoint(event.point);\n        const distance = nearestPoint.getDistance(event.point);\n\n        // ある程度の近さ（例: 5px以内）で色を変える\n        if (distance < 5) {\n          myPath.strokeColor = new paper.Color('red');\n        } else {\n          myPath.strokeColor = new paper.Color('black');\n        }\n        paper.view.update(); // 変更を適用\n      };\n    }\n    // クリーンアップ処理 (コンポーネントがアンマウントされた時)\n    return () => {\n      paper.project.clear(); // 既存のpaper.jsプロジェクトをクリア\n    };\n  }, []);\n  const toggleDrawing = () => {};\n  const toggleErasing = () => {};\n  const handleMouseMove = event => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    // クリックした座標を取得\n    const rect = canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n    console.log(x, y);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 600,\n      height: 500,\n      style: {\n        border: '1px solid black'\n      },\n      onMouseMove: handleMouseMove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        marginLeft: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDrawing,\n        className: isDrawing ? \"bg-blue-500\" : \"\",\n        children: isDrawing ? 'Stop Drawing' : 'Start Drawing'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleErasing,\n        className: isErasing ? \"bg-yellow-500\" : \"\",\n        children: isErasing ? 'Stop Erasing' : 'Start Erasing'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Canvas, \"tFo5h4agn0jZfremW2eZ5FF5dGc=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useEffect","useRef","paper","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","isDrawing","setIsDrawing","isErasing","setIsErasing","current","setup","circle","Path","Circle","center","radius","strokeColor","myPath","Color","add","Point","view","onMouseMove","event","nearestPoint","getNearestPoint","point","distance","getDistance","update","project","clear","toggleDrawing","toggleErasing","handleMouseMove","canvas","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","console","log","style","display","flexDirection","children","ref","width","height","border","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","onClick","className","_c","$RefreshReg$"],"sources":["/Users/shozaburo/Documents/git/drawing_app/src/PaperCanvas.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport paper from 'paper';\n\n// マウスポインターの座標\ninterface Point {\n  x: number;\n  y: number;\n}\n\nconst Canvas = () => {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false)\n  const [isErasing, setIsErasing] = useState(false)\n\n  useEffect(() => {\n    // canvasが準備できたらpaper.jsを初期化\n    if (canvasRef.current) {\n      paper.setup(canvasRef.current);\n\n      // ここに描画処理を書く\n\n      // 例: 円を描画\n      const circle = new paper.Path.Circle({\n        center: [50, 50],\n        radius: 30,\n        strokeColor: 'black',\n      });\n\n      // 例: 直線を描画\n      var myPath = new paper.Path();\n      myPath.strokeColor = new paper.Color('black');\n      myPath.add(new paper.Point(0, 0));\n      myPath.add(new paper.Point(100, 50));\n      //setPath(newPath);\n\n      // 任意で、交差判定などの処理もここで行えます。\n\n      // マウスムーブ時の処理\n      paper.view.onMouseMove = (event: paper.ToolEvent) => {\n        const nearestPoint = myPath.getNearestPoint(event.point);\n        const distance = nearestPoint.getDistance(event.point);\n\n        // ある程度の近さ（例: 5px以内）で色を変える\n        if (distance < 5) {\n          myPath.strokeColor = new paper.Color('red');\n        } else {\n          myPath.strokeColor = new paper.Color('black');\n        }\n\n        paper.view.update();  // 変更を適用\n      };\n\n    }\n    // クリーンアップ処理 (コンポーネントがアンマウントされた時)\n    return () => {\n      paper.project.clear();  // 既存のpaper.jsプロジェクトをクリア\n    };\n  }, []);\n  const toggleDrawing = () => { }\n  const toggleErasing = () => { }\n  const handleMouseMove: React.MouseEvent<HTMLCanvasElement> = (event) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    // クリックした座標を取得\n    const rect = canvas.getBoundingClientRect();\n\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    console.log(x, y);\n\n  }\n\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row' }}>\n      <canvas\n        ref={canvasRef}\n        width={600}\n        height={500}\n        style={{ border: '1px solid black' }}\n        onMouseMove={handleMouseMove}\n      />\n      <div style={{ display: 'flex', flexDirection: 'column', marginLeft: '10px' }}>\n        <button onClick={toggleDrawing} className={isDrawing ? \"bg-blue-500\" : \"\"}>\n          {isDrawing ? 'Stop Drawing' : 'Start Drawing'}\n        </button>\n        <button onClick={toggleErasing} className={isErasing ? \"bg-yellow-500\" : \"\"}>\n          {isErasing ? 'Stop Erasing' : 'Start Erasing'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}